name: CI / CD
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]
permissions:
  issues: write
  contents: read
jobs:
  ci-cd:
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.action != 'closed')
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      - name: deploy bicep
        id: bicep
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: rg-computost-website
          template: .github/bicep/website.bicep
          parameters: >
            repositoryUrl=${{ github.server_url }}/${{ github.repository }}
      - name: get deployment token
        id: get-deployment-token
        uses: azure/CLI@v1
        with:
          inlineScript: |
            token=$(
              az staticwebapp secrets list \
                --name ${{ steps.bicep.outputs.siteName }} |
              jq -r '.properties.apiKey'
            )
            echo "::add-mask::$token"
            echo "token=$token" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm ci
      - run: npm run build
      - name: upload site
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.get-deployment-token.outputs.token }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: upload
          production-branch: main
          output_location: public
      - name: logout
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
